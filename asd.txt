#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <locale.h>
#define _CRT_SECURE_NO_WARNINGS
#define MAXLENGT 255

typedef struct student {
	char lastname[MAXLENGT];
	short math;
	short inform;
	short phys;
}student;

student *array_sudent = NULL;
int count_student = 0;
short count1 = 0;
short count2 = 0;
short count3 =0;

void add(student temp) {
	if (!array_sudent) {
		array_sudent = (student*)malloc(sizeof(student));
		array_sudent[count_student].math = temp.math;
		array_sudent[count_student].phys = temp.phys;
		array_sudent[count_student].inform = temp.inform;
		strcpy(array_sudent[count_student].lastname, temp.lastname);
	}
	else {
		array_sudent = (student*)realloc(array_sudent, sizeof(student)*(count_student+1));
		array_sudent[count_student].math = temp.math;
		array_sudent[count_student].phys = temp.phys;
		array_sudent[count_student].inform = temp.inform;
		strcpy(array_sudent[count_student].lastname, temp.lastname);
	}
	count_student++;
	system("pause");
}

void addMenu() {
	student temp;
	system("cls");
	printf("Фамилия: ");
	scanf("%s", &temp.lastname);
	printf("Оценка по физике: ");
	scanf("%hd", &temp.phys);
	printf("Оценка по математике: ");
	scanf("%hd", &temp.math);
	printf("Оценка по информатике: ");
	scanf("%hd", &temp.inform);
	add(temp);
}

void print_student() {
	char flag = 0;
	system("cls");
	if (count_student == 0)
		printf("Пусто\n");
	else {
		for (int i = 0; i < count_student; i++)
				printf("%d. %s %d %d %d\n", i + 1, array_sudent[i].lastname, array_sudent[i].phys, array_sudent[i].math, array_sudent[i].inform );
}
}

void delete_student(int index) {
	if (count_student == 1) {
		--count_student;
		free(array_sudent);
		array_sudent = NULL;
		return;
	}
	student* temp_array = (student*)malloc(sizeof(student)*count_student - 1);
	for (int i = 0, j = 0; i < count_student; i++, j++) {
		if (i == index) {
			++i;
			if (i >= count_student)
				break;
		}
		temp_array[j].math = array_sudent[i].math;
		temp_array[j].inform = array_sudent[i].inform;
		temp_array[j].phys = array_sudent[i].phys;
		strcpy(temp_array[j].lastname, array_sudent[i].lastname);
	}
	--count_student;
	free(array_sudent);
	array_sudent = temp_array;
}

void deleteMenu() {
	system("cls");
	print_student();
	if (array_sudent) {
		int del;
		printf("\nВведите номер студента для удаления (0 - для выхода): ");
		scanf("%d", &del);
		if (del == 0)
			return;
		else {
			if (del < 0 || del > count_student)
				printf("Введен некорректный номер студента\n");
			else
				delete_student(del - 1);
		}
	}
	system("pause");
}

void writeInFile(const char* filename) {
	FILE* file = fopen(filename, "wb+");
	if (!file) {
		perror("Ошибка открытия/создания файла");
		exit(1);
	}
	fwrite(&count_student, sizeof(int), 1, file);
	fwrite(array_sudent, sizeof(student), count_student, file);
}

void readFile(FILE* file) {
	fread(&count_student, sizeof(int), 1, file);
	array_sudent = (student*)malloc(sizeof(student)*count_student);
	fread(array_sudent, sizeof(student), count_student, file);
}

void twos () {
	system("cls");
	for (int i = 0; i < count_student; i++)
	{
		if (array_sudent[i].phys==2)
			count1++;
		if (array_sudent[i].math==2)
			count2++;
		if (array_sudent[i].inform==2)
			count3++;
	}
	printf("Общее количество двоек:\n  по физике: %hd\n  по математике: %hd\n  по информатике: %hd\n", count1, count2, count3);
}

void losers() {
	system("cls");
	printf("Список студентов, имеющих хотя бы одну двойку:\n");
	for (int i=0; i < count_student; i++)
		if (array_sudent[i].phys==2 || array_sudent[i].math==2 || array_sudent[i].inform==2)
			printf("%d. %s %d %d %d\n", i + 1, array_sudent[i].lastname, array_sudent[i].phys, array_sudent[i].math, array_sudent[i].inform );
	if (count1 == 0 && count2 == 0 && count3 == 0)
		printf("Список пуст\n");
}

int main(int argc, char *argv[]) {
	setlocale(LC_ALL, "Russian");
	FILE* file = NULL;
	char filename[MAXLENGT], sym;
	if (argc > 1)
		strcpy(&filename, argv[1]);
	else {
		printf("Введите название файла: ");
		scanf("%s", filename);
	}

	if (!(file = fopen(filename, "rb+"))) {
		perror("Ошибка открытия файла");
		do {
			printf("\nСоздать новый файл с таким же именем ? (Y, N): ");
			while (getchar() != '\n');
			sym = getchar();
			if (sym == 'Y' || sym == 'y') {
				if (!(file = fopen(filename, "wb"))) {
					perror("Ошибка создания файла");
					return 1;
				}
				break;
			}
			else
				if (sym == 'N' || sym == 'n')
					return 0;
		} while (1);
	}
	else
		readFile(file);
	int dig = 0;
	do {
		system("cls");
		printf("1. Добавить запись о студенте\n");
		printf("2. Удалить запись о студенте\n");
		printf("3. Просмотр информации о всех студентах\n");
		printf("4. Просмотр количества двоек\n");
		printf("5. Просмотр студентов, имеющих хотя бы дну двойку\n");
		printf("0. Сохранить и выйти\n");
		scanf("%d", &dig);
		switch (dig)
		{
			case 1: addMenu(); break;
			case 2: deleteMenu(); break;
			case 3: print_student(); system("pause"); break;
			case 4: twos();system("pause"); break;
			case 5: losers();system("pause"); break;
		}
	} while (dig !=0);
	writeInFile(filename);
	return 0;
}